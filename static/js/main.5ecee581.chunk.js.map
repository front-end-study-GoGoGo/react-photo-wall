{"version":3,"sources":["imgs/loading-2.jpeg","components/gallery/image.js","components/gallery/controller.js","components/gallery/gallery.js","index.js"],"names":["Image","e","this","props","arrange","isCenter","center","record","preventDefault","styleObj","pos","rotate","figureClassName","isReverse","className","id","style","onClick","handleClick","bind","top","width","src","data","url","alt","title","preview","placeholder","require","default","Component","Controller","navClassName","ImgInfos","ImgsData","map","img","Object","assign","filename","getRandom","min","max","Math","floor","random","getRandomDeg","ceil","Gallery","constantPos","centerPos","left","horizontalRange","leftSectionX","rightSectionX","y","verticalRange","x","topSectionY","state","figureArrangeArr","nowClickedImageIndex","loadingKey","index","reArrangFigure","setState","centerIndex","centerFigure","splice","topArrNum","topIndex","length","figureTopArr","forEach","i","j","k","LORSectionX","nowIndex","recordImgIndex","stage","document","getElementById","stageWidth","scrollWidth","stageHeight","scrollHeight","halfStageWidth","halfStageHeight","figure","figureWidth","figureHeight","halfFigureWidth","halfFigureHeight","imgsFlag","imgDom","querySelectorAll","message","loading","content","key","duration","imgsLoading","setInterval","complete","console","log","clearInterval","success","navigators","imgFigures","imgInfo","push","reverse","reverseFigure","putFigureCenter","type","ghost","jumpOnImg","jumpNextImg","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5ecee581.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading-2.1e9a3a80.jpeg\";","import React, { Component, useState } from 'react'\r\nimport {\r\n  Image as AntdImage,\r\n} from 'antd';\r\n\r\nclass Image extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     styleObj: {}\r\n  //   };\r\n  // }\r\n\r\n  handleClick(e) {\r\n    if (this.props.arrange.isCenter) {\r\n      // console.log(111);\r\n      // this.props.reverse()\r\n    } else {\r\n      // console.log(222)\r\n      this.props.center();\r\n      this.props.record();\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"子组件渲染完毕\");\r\n  }\r\n\r\n  render() {\r\n    let styleObj = {}\r\n    if (this.props.arrange.pos) {\r\n      styleObj = { ...this.props.arrange.pos };\r\n      // styleObj = this.props.arrange.pos; // 这句会报错，但是上面那个解构语句却不会报错\r\n    }\r\n    if (this.props.arrange.rotate) {\r\n      styleObj[\"transform\"] = `rotate(${this.props.arrange.rotate}deg)`\r\n    }\r\n    if (this.props.arrange.isCenter) {\r\n      styleObj['zIndex'] = 11;\r\n    }\r\n    let figureClassName = \"img-figure\"\r\n    figureClassName += this.props.arrange.isReverse ? ' is-reverse' : ''\r\n    // this.setState({ styleObj: 1 });\r\n\r\n    return (\r\n      <>\r\n        <figure\r\n          className={figureClassName}\r\n          id={this.props.id}\r\n          style={styleObj}\r\n          onClick={this.handleClick.bind(this)}\r\n        // onClick={() => { console.log('点击了一次') }}\r\n        >\r\n          <div className=\"front\" style={this.props.arrange.isCenter ? { top: '-125px' } : {}}>\r\n            <AntdImage\r\n              style={this.props.arrange.isCenter ? { width: '450px' } : {}}\r\n              src={this.props.data.url}\r\n              alt={this.props.data.title}\r\n              preview={this.props.arrange.isCenter ? true : false}\r\n              placeholder={\r\n                <AntdImage\r\n                  preview={false}\r\n                  src={require('../../imgs/loading-2.jpeg').default}\r\n                  style={this.props.arrange.isCenter ? { width: '450px' } : {}}\r\n                >\r\n                </AntdImage>\r\n              }\r\n            >\r\n            </AntdImage>\r\n            {this.props.arrange.isCenter ? <h3 className=\"img-title\">{this.props.data.title}</h3> : ''}\r\n          </div>\r\n        </figure>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Image","import React, { Component } from 'react'\r\nclass Controller extends Component {\r\n  handleClick(e) {\r\n    if (this.props.arrange.isCenter) {\r\n      // this.props.reverse()\r\n    } else {\r\n      this.props.center();\r\n      this.props.record();\r\n    }\r\n    e.preventDefault()\r\n  }\r\n  render() {\r\n    let navClassName = \"controller\"\r\n    navClassName += this.props.arrange.isCenter ? ' is-center' : ''\r\n    navClassName += this.props.arrange.isReverse ? ' is-reverse' : ''\r\n    return (\r\n      <span className={navClassName} onClick={this.handleClick.bind(this)}></span>\r\n    )\r\n  }\r\n}\r\nexport default Controller","import React, { Component, useState, useEffect } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport ImgsData from './imgsdata.json'\r\nimport Image from './image'\r\nimport Controller from './controller'\r\nimport './gallery.less'\r\nimport { Button, message } from 'antd';\r\n\r\n// 获取图片数组相关信息，增加 URL\r\nlet ImgInfos = ImgsData.map((img) => {\r\n  return Object.assign({},\r\n    img,\r\n    // { url: require(`../../../src/imgs/${img.filename}`).default }\r\n    { url: img.filename }\r\n  )\r\n})\r\n\r\nlet getRandom = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min) + min)\r\n}\r\n\r\n// 获取-30~30的随机数字\r\nlet getRandomDeg = () => {\r\n  return ((Math.random() > 0.5 ? '' : '-') + Math.ceil(Math.random() * 30))\r\n}\r\n\r\n\r\n/**\r\n * 整个 stage 分为左分区、右分区、上分区以及中间展示的 figure\r\n * 左右分区的 y 方向取值范围相同，因此设置不同的水平方向取值返回\r\n * 上分区另设自己的取值范围\r\n */\r\nclass Gallery extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    //初始化 figure 的位置\r\n    this.constantPos = {\r\n      //中间展示 figure\r\n      centerPos: {\r\n        left: 0,\r\n        top: 0\r\n      },\r\n      //水平方向取值范围\r\n      horizontalRange: {\r\n        leftSectionX: [0, 0], //左分区figure 的 x(水平)方向取值范围\r\n        rightSectionX: [0, 0], //右分区figure 的 x(水平)方向取值范围\r\n        y: [0, 0] // y 方向取值范围\r\n      },\r\n      //垂直方向取值范围\r\n      verticalRange: {\r\n        x: [0, 0],\r\n        topSectionY: [0, 0]\r\n      }\r\n    }\r\n    this.state = {\r\n      //  存储每个 figure 的位置\r\n      figureArrangeArr: [\r\n        {\r\n          pos: {\r\n            left: 0,\r\n            top: 0\r\n          },\r\n          rotate: 0,\r\n          isReverse: false, // 是否翻转\r\n          isCenter: false // 是否居中\r\n        }\r\n      ],\r\n      nowClickedImageIndex: 0, // 当前被选中的图片id\r\n      loadingKey: 'loadingKey', // 图片加载提示key\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 图片居中\r\n   * @param 需要居中图片的 index 值\r\n   * @return 返回一个待执行函数\r\n   */\r\n  putFigureCenter(index) {\r\n    // console.log('---', index);\r\n    return function () {\r\n      this.reArrangFigure(index)\r\n    }.bind(this)\r\n  }\r\n\r\n  /**\r\n   * 翻转图片  -- 2021.12.6功能更改，改成 放大图片 --\r\n   * @param  index 需要翻转图片的 index 值  \r\n   * 将该图片 isReverse 取反后触发 setState 进行重新渲染\r\n   * @return 返回一个待执行函数\r\n   */\r\n  reverseFigure(index) {\r\n    /**\r\n     * 放大操作 \r\n     * 思路： 使用全局dom 置顶显示\r\n     */\r\n    return function () {\r\n      let figureArrangeArr = this.state.figureArrangeArr\r\n      // console.log('---', figureArrangeArr[index])\r\n      figureArrangeArr[index].isReverse = !figureArrangeArr[index].isReverse\r\n      this.setState({\r\n        figureArrangeArr: figureArrangeArr\r\n      })\r\n    }.bind(this)\r\n  }\r\n\r\n  // 重新排布图片\r\n  reArrangFigure(centerIndex) {\r\n    let constantPos = this.constantPos,\r\n      centerPos = constantPos.centerPos,\r\n      horizontalRange = constantPos.horizontalRange,\r\n      verticalRange = constantPos.verticalRange,\r\n      leftSectionX = horizontalRange.leftSectionX,\r\n      rightSectionX = horizontalRange.rightSectionX\r\n    let figureArrangeArr = this.state.figureArrangeArr,\r\n      centerFigure = figureArrangeArr.splice(centerIndex, 1)\r\n\r\n    // 居中图片\r\n    centerFigure = {\r\n      pos: centerPos,\r\n      rotate: 0,\r\n      isReverse: false,\r\n      isCenter: true\r\n    }\r\n    // 上部区域图片\r\n    let topArrNum = Math.floor(Math.random() * 2), // 上部图片数量 0~1\r\n      topIndex = Math.floor(Math.random() * (figureArrangeArr.length - topArrNum)), // 上部图片起始 index\r\n      figureTopArr = figureArrangeArr.splice(topIndex, topArrNum)\r\n\r\n    figureTopArr.forEach((img, index) => {\r\n      figureTopArr[index] = {\r\n        pos: {\r\n          left: getRandom(verticalRange.x[0], verticalRange.x[1]),\r\n          top: getRandom(verticalRange.topSectionY[0], verticalRange.topSectionY[1])\r\n        },\r\n        rotate: getRandomDeg,\r\n        isReverse: false,\r\n        isCenter: false\r\n      }\r\n    })\r\n    // 左右两边图片\r\n    for (let i = 0, j = figureArrangeArr.length, k = j / 2; i < j; i++) {\r\n      let LORSectionX = null\r\n      if (i < k) {\r\n        LORSectionX = leftSectionX\r\n      } else {\r\n        LORSectionX = rightSectionX\r\n      }\r\n      figureArrangeArr[i] = {\r\n        pos: {\r\n          left: getRandom(LORSectionX[0], LORSectionX[1]),\r\n          top: getRandom(horizontalRange.y[0], horizontalRange.y[1])\r\n        },\r\n        rotate: getRandomDeg(),\r\n        isReverse: false,\r\n        isCenter: false\r\n      }\r\n    }\r\n    if (figureTopArr && figureTopArr[0]) {\r\n      figureArrangeArr.splice(topIndex, 0, figureTopArr[0])\r\n    }\r\n    figureArrangeArr.splice(centerIndex, 0, centerFigure)\r\n    this.setState({\r\n      figureArrangeArr: figureArrangeArr\r\n    })\r\n  }\r\n\r\n  // 记录当前被选中图片的index\r\n  recordImgIndex(index) {\r\n\r\n    return function () {\r\n      this.setState({\r\n        nowClickedImageIndex: index,\r\n      });\r\n    }.bind(this)\r\n  }\r\n\r\n  // 跳转上一张图片\r\n  jumpOnImg(index) {\r\n    let nowIndex = index === 0 ? 0 : index - 1;\r\n    if (index !== 0) {\r\n      this.setState({\r\n        nowClickedImageIndex: nowIndex,\r\n      })\r\n      this.recordImgIndex(nowIndex);\r\n      this.reArrangFigure(nowIndex);\r\n    }\r\n  }\r\n\r\n  // 跳转下一张图片\r\n  jumpNextImg(index) {\r\n    let nowIndex = index === ImgsData.length - 1 ? ImgsData.length - 1 : index + 1;\r\n    if (index !== ImgsData.length - 1) {\r\n      this.setState({\r\n        nowClickedImageIndex: nowIndex,\r\n      })\r\n      this.recordImgIndex(nowIndex);\r\n      this.reArrangFigure(nowIndex);\r\n    }\r\n  }\r\n\r\n  // 在组件初次渲染之后触发，计算figure位置范围\r\n  componentDidMount() {\r\n    // 获取 stage 的宽高\r\n    let stage = document.getElementById('stage'),\r\n      stageWidth = stage.scrollWidth,\r\n      stageHeight = stage.scrollHeight,\r\n      halfStageWidth = Math.ceil(stageWidth / 2),\r\n      halfStageHeight = Math.ceil(stageHeight / 2)\r\n    // 获取 figure 的宽高\r\n    let figure = document.getElementById('figure0'),\r\n      figureWidth = figure.scrollWidth,\r\n      figureHeight = figure.scrollHeight,\r\n      halfFigureWidth = Math.ceil(figureWidth / 2),\r\n      halfFigureHeight = Math.ceil(figureHeight / 2)\r\n    this.constantPos = {\r\n      // 中心 figure 位置\r\n      centerPos: {\r\n        left: halfStageWidth - halfFigureWidth,\r\n        top: halfStageHeight - halfFigureHeight\r\n      },\r\n      horizontalRange: {\r\n        leftSectionX: [-halfFigureWidth, halfStageWidth - 3 * halfFigureWidth],\r\n        rightSectionX: [3 * halfFigureWidth + halfStageWidth, stageWidth - halfFigureWidth],\r\n        y: [-halfFigureHeight, stageHeight - halfFigureHeight]\r\n      },\r\n      verticalRange: {\r\n        x: [halfStageWidth - figureWidth, halfStageWidth],\r\n        topSectionY: [-halfFigureHeight, halfStageHeight - 3 * halfFigureHeight]\r\n      }\r\n    }\r\n    this.reArrangFigure(this.state.nowClickedImageIndex);\r\n    // console.log(\"父组件渲染完毕\");\r\n\r\n    // 检查图片是否还在加载中\r\n    let imgsFlag = 0;\r\n    let imgDom = document.querySelectorAll('img.ant-image-img');\r\n    message.loading({ content: '图片正在加载中，请稍后呀......', key: this.state.loadingKey, duration: 0 })\r\n    let imgsLoading = setInterval(() => {\r\n      imgDom = document.querySelectorAll('img.ant-image-img'); // 找到所有antd Image组件的图片dom结点\r\n      imgsFlag = 0;\r\n      for (let i = 0; i < imgDom.length; i++) {\r\n        if (imgDom[i].complete) {\r\n          imgsFlag++;\r\n        }\r\n      }\r\n      console.log(\"===:\", imgsFlag, imgDom.length);\r\n      if (imgsFlag >= imgDom.length) {\r\n        console.log(\"图片加载完了\", imgsFlag);\r\n        clearInterval(imgsLoading);\r\n        message.success({ content: '图片加载完毕!', key: this.state.loadingKey, duration: 2 });\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    let navigators = []\r\n    let imgFigures = []\r\n    ImgInfos.forEach(function (imgInfo, index) {\r\n      if (!this.state.figureArrangeArr[index]) {\r\n        this.state.figureArrangeArr[index] = {\r\n          pos: {\r\n            left: 0,\r\n            top: 0\r\n          },\r\n          rotate: 0,\r\n          isReverse: false,\r\n          isCenter: false\r\n        }\r\n      }\r\n      imgFigures.push(\r\n        <Image\r\n          data={imgInfo} key={index} id={\"figure\" + index}\r\n          arrange={this.state.figureArrangeArr[index]}\r\n          reverse={this.reverseFigure(index)}\r\n          center={this.putFigureCenter(index)}\r\n          record={this.recordImgIndex(index)}\r\n        />\r\n      )\r\n      navigators.push(\r\n        <Controller\r\n          key={index}\r\n          arrange={this.state.figureArrangeArr[index]}\r\n          reverse={this.reverseFigure(index)}\r\n          center={this.putFigureCenter(index)}\r\n          record={this.recordImgIndex(index)}\r\n        />\r\n      )\r\n    }.bind(this))\r\n    return (\r\n      <>\r\n        <div className=\"stage\" id=\"stage\">\r\n          <div className=\"img-container\">\r\n            {imgFigures}\r\n          </div>\r\n          <div className='img-nav'>\r\n            {/* <div> */}\r\n            <Button type=\"primary\" ghost onClick={() => { this.jumpOnImg(this.state.nowClickedImageIndex) }}>上一张</Button>\r\n            <nav className=\"img-nav-content\">\r\n              {navigators}\r\n            </nav>\r\n            <Button type=\"primary\" ghost onClick={() => { this.jumpNextImg(this.state.nowClickedImageIndex) }}>下一张</Button>\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Gallery","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Gallery from './components/gallery/gallery'; // 照片墙\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Gallery />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}